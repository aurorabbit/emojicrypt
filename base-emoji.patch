1c1
< var emojis = require('./emojis.json')
---
> var baseEmoji = {};
4,5c4,9
<   if (!Buffer.isBuffer(v))
<     return new Buffer(v, 'hex')
---
>   if (v instanceof ArrayBuffer)
>     return new Uint8Array(v)
>   if (!ArrayBuffer.isView(v))
>     throw new Error('Invalid ArrayBuffer');
>   if (!v instanceof Uint8Array)
>     throw new Error('Buffer must be Uint8Array'); //?
12d15
<   var n =0;
14,15c17
<     out += fn(buf.readUInt8(i))
<     n++
---
>     out += fn(buf[i])
20,21c22,23
< exports.toUnicode =
< exports.toUtf8 = function(buf) { // toUtf8 is legacy, it's inaccurate - JS is utf16
---
> baseEmoji.toUnicode =
> baseEmoji.toUtf8 = function(buf) { // toUtf8 is legacy, it's inaccurate - JS is utf16
23c25
<     return emojis[c].char
---
>     return emoji256.chars[c]
27c29
< exports.toNames = function(buf) {
---
> baseEmoji.toNames = function(buf) {
29c31
<     return ':'+emojis[c].name+':'
---
>     return ':'+emoji256.names[c]+':'
33c35
< exports.toCustom = function(buf, fn) {
---
> baseEmoji.toCustom = function(buf, fn) {
35c37
<     return fn(c, emojis[c])
---
>     return fn(c)
39c41
< exports.fromUnicode = function (s) {
---
> baseEmoji.fromUnicode = function (s) {
41c43
<   var buf = new Buffer(s.length)
---
>   var buf = new Uint8Array(s.length)
43,49c45,46
<     for (var i=0; i < emojis.length; i++) {
<       if (emojis[i].char == symbol) {
<         buf.writeUIntBE(i, index, 1)
<         break
<       }
<     }
<     if (i == emojis.length)
---
>     var byte = emoji256.chars.indexOf(symbol);
>     if (byte == -1)
50a48
>     buf[index] = byte;
